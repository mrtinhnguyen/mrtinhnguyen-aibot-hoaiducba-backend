from flask import Flask, request, jsonify
from chatbot import find_answer
from flask_cors import CORS  # Import CORS
import logging

app = Flask(__name__)
logging.basicConfig(level=logging.DEBUG)
CORS(app, resources={r"/chat": {"origins": "*"}})  # Cho ph√©p t·∫•t c·∫£ ngu·ªìn g·ªëc truy c·∫≠p API
@app.route("/", methods=["GET"])
def home():
    return "Chatbot API is running!"

@app.route("/chat", methods=["POST"])
def chat():
    try:
        raw_data = request.data.decode("utf-8")  # L·∫•y d·ªØ li·ªáu th√¥
        app.logger.debug(f"üì• D·ªØ li·ªáu g·ªëc: {raw_data}")

        data = request.get_json(silent=True)
        app.logger.debug(f"D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c: {data} (Lo·∫°i: {type(data)})")
        if not isinstance(data, dict):  # N·∫øu data kh√¥ng ph·∫£i dictionary, tr·∫£ v·ªÅ l·ªói
                return jsonify({"error": "D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá"}), 400;
        if "message" not in data:
                return jsonify({"error": "Thi·∫øu message!"}), 400
        user_message = data.get("message", "")
        
        if not user_message:
            return jsonify({"reply": "Xin l·ªói, t√¥i kh√¥ng hi·ªÉu c√¢u h·ªèi c·ªßa b·∫°n."})
        response_text = find_answer(user_message)
        return jsonify({"reply": response_text})
    
    except Exception as e:
        app.logger.error(f"üî• L·ªñI SERVER: {str(e)}", exc_info=True)
        return jsonify({"error": "L·ªói server"}), 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000)